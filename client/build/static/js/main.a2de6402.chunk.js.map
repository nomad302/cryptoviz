{"version":3,"sources":["reducers/searchReducer.js","reducers/currentCoinReducer.js","reducers/index.js","reducers/coinsReducer.js","reducers/historicalReducer.js","reducers/coinNewsReducer.js","components/AppLayout.js","components/NavBar.js","api/crypto.js","actions/index.js","components/CoinGrid.js","components/SearchBar.js","components/Dashboard.js","components/News.js","components/chart/Chart.js","components/chart/chartTheme.js","components/CoinDetails.js","components/TopCoins.js","components/ChartDashBoard.js","history.js","components/App.js","index.js"],"names":["INITIAL_STATE","value","combineReducers","coins","state","action","type","payload","searchTerm","currentCoin","historicalData","coinNews","styled","div","Logo","Bar","ControlLink","Link","ControlButton","to","name","NavBar","style","textDecoration","axios","create","baseURL","fetchCoins","dispatch","a","get","response","data","searchCoins","term","fetchHistoricalData","coin","arr","Data","map","time","close","setCurrentCoin","Grid","Tile","Image","img","Price","strong","props","price","Title","p","CoinGrid","str","replace","trim","Number","this","filter","CoinInfo","FullName","toLowerCase","includes","index","key","Name","src","ImageUrl","alt","DISPLAY","USD","MKTCAP","PRICE","convertToNumber","CHANGE24HOUR","renderCoinsList","React","Component","connect","Input","input","searchValue","placeholder","onChange","e","target","Board","SearchFlex","DashBoard","length","onSearch","onSeachChange","color","height","width","timeout","NewsGrid","NewsTile","Heading","h2","NewsFlex","Newstitle","News","fetchCoinNews","date","currentDate","Date","getDate","getMonth","getFullYear","newsList","news","url","onClick","event","preventDefault","window","open","imageurl","tags","title","textAlign","marginRight","published_on","renderNewsList","Highcharts","theme","colors","chart","backgroundColor","fontFamily","plotBorderColor","textTransform","fontSize","subtitle","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","tooltip","plotOptions","series","dataLabels","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","setOptions","Chart","historical","options","text","highcharts","constructorType","ChartGrid","SideGrid","h1","CoinDetails","find","getCurrentCoin","TopCoinsFlex","h3","TopCoins","topCoins","renderTopCoins","slice","ChartDashBoard","match","params","createBrowserHistory","App","history","AppLayout","path","exact","component","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"2OAAMA,EAAgB,CAAEC,MAAO,ICAzBD,EAAgB,CAAEC,MAAO,ICOhBC,cAAgB,CAC7BC,MCRa,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOD,EAAOE,QAEhB,QACE,OAAOH,IDGXI,WFPa,WAAoC,IAAnCJ,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,eACH,IAAML,EAAQI,EAAOE,QACrB,OAAO,eAAKH,EAAZ,CAAmBH,UAGrB,QACE,OAAOG,IEAXK,YDRa,WAAoC,IAAnCL,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,WACH,IAAML,EAAQI,EAAOE,QACrB,OAAO,eAAKH,EAAZ,CAAmBH,UAGrB,QACE,OAAOG,ICCXM,eEXa,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAOD,EAAOE,QAChB,QACE,OAAOH,IFOXO,SGZa,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAOD,EAAOE,QAChB,QACE,OAAOH,M,iOCHEQ,UAAOC,IAAtB,K,wlBCEA,IAAMC,EAAOF,IAAOC,IAAV,KAKJE,EAAMH,IAAOC,IAAV,KASHG,EAAcJ,YAAOK,IAAPL,CAAH,KAcXM,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAC3B,OAAO,kBAACJ,EAAD,CAAaG,GAAIA,GAAKC,IAkBhBC,EAfA,WACb,OACE,kBAACN,EAAD,KACE,kBAAC,IAAD,CAAMI,GAAG,IAAIG,MAAO,CAAEC,eAAgB,SACpC,kBAACT,EAAD,mBAGF,8BAEA,kBAAC,EAAD,CAAeK,GAAG,QAAQC,KAAK,SAC/B,kBAAC,EAAD,CAAeD,GAAG,IAAIC,KAAK,e,8EC5ClBI,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0BCDEC,EAAa,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEACPL,EAAMM,IAAI,UADH,OACxBC,EADwB,OAE9BH,EAAS,CAAEtB,KAAM,cAAeC,QAASwB,EAASC,OAFpB,2CAAN,uDAKbC,EAAc,SAACC,GAAD,OAAU,SAACN,GACpCA,EAAS,CAAEtB,KAAM,eAAgBC,QAAS2B,MAG/BC,EAAsB,SAACC,GAAD,8CAAU,WAAOR,GAAP,iBAAAC,EAAA,sEACpBL,EAAMM,IAAN,sBAAyBM,IADL,OACrCL,EADqC,OAErCM,EAAMN,EAASC,KAAKM,KAAKA,KAAKC,KAAI,kBAAqB,CACpD,IAD+B,EAAGC,KAAH,EAASC,UAIjDb,EAAS,CAAEtB,KAAM,mBAAoBC,QAAS8B,IANH,2CAAV,uDActBK,EAAiB,SAACN,GAAD,8CAAU,WAAOR,GAAP,SAAAC,EAAA,sDACtCD,EAAS,CAAEtB,KAAM,WAAYC,QAAS6B,IACtCR,EAASO,EAAoBC,IAFS,2CAAV,uD,gzBCpB9B,IAAMO,EAAO/B,IAAOC,IAAV,KAYJ+B,EAAOhC,YAAOK,IAAPL,CAAH,KAWJiC,EAAQjC,IAAOkC,IAAV,KAKLC,EAAQnC,IAAOoC,OAAV,KACA,SAACC,GAAD,OAAYA,EAAMC,MAAQ,EAAI,UAAY,aAG/CC,EAAQvC,IAAOwC,EAAV,KAMLC,E,8KACYpD,GACd,IAAIqD,EAAMrD,EAAMsD,QAAQ,IAAK,IAAIC,OACjC,OAAOC,OAAOH,K,wCAGG,IAAD,OAChB,OAAOI,KAAKT,MAAM9C,MACfwD,QAAO,SAACvB,GACP,OAAOA,EAAKwB,SAASC,SAASC,cAAcC,SAC1C,EAAKd,MAAMzC,WAAWP,UAGzBsC,KAAI,SAACH,EAAM4B,GACV,OACE,kBAACpB,EAAD,CAAMqB,IAAKD,EAAO7C,GAAE,sBAAiBiB,EAAKwB,SAASM,OACjD,kBAACrB,EAAD,CACEsB,IAAG,uCAAkC/B,EAAKwB,SAASQ,UACnDC,IAAKjC,EAAKwB,SAASM,OAErB,kBAACf,EAAD,KAAQf,EAAKwB,SAASC,UACtB,2CAAiBzB,EAAKkC,QAAQC,IAAIC,QAClC,sCAAYpC,EAAKkC,QAAQC,IAAIE,OAC7B,2CACgB,IACd,kBAAC1B,EAAD,CACEG,MAAO,EAAKwB,gBAAgBtC,EAAKkC,QAAQC,IAAII,eAE5CvC,EAAKkC,QAAQC,IAAII,qB,+BAQ9B,OAAO,kBAAChC,EAAD,KAAOe,KAAKkB,uB,GApCAC,IAAMC,WA4CdC,gBAJS,SAAC3E,GACvB,MAAO,CAAED,MAAOC,EAAMD,MAAOK,WAAYJ,EAAMI,cAGT,KAAzBuE,CAA+B1B,G,wNClF9C,IAAM2B,GAAQpE,IAAOqE,MAAV,MAyBIF,gBAJS,SAAC3E,GACvB,MAAO,CAAE8E,YAAa9E,EAAMI,WAAWP,SAGD,CAAEgC,eAA3B8C,EAfG,SAAC9B,GACjB,OACE,kBAAC+B,GAAD,CACE1E,KAAK,OACL6E,YAAY,eACZlF,MAAOgD,EAAMiC,YACbE,SAAU,SAACC,GAAD,OAAOpC,EAAMhB,YAAYoD,EAAEC,OAAOrF,a,+SCblD,IAAMsF,GAAQ3E,IAAOC,IAAV,MAOL2E,GAAa5E,IAAOC,IAAV,MAMV4E,G,kLAEF/B,KAAKT,MAAMtB,e,+BAIX,OAAK+B,KAAKT,MAAM9C,MAAMuF,OAcpB,6BACE,kBAACF,GAAD,KACE,kBAAC,GAAD,CACEvF,MAAOyD,KAAKT,MAAMzC,WAClBmF,SAAUjC,KAAKkC,iBAInB,kBAAC,GAAD,OApBA,kBAACL,GAAD,KACE,kBAAC,IAAD,CACEjF,KAAK,OACLuF,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,W,GAdGnB,IAAMC,WAyCfC,gBAPS,SAAC3E,GACvB,MAAO,CACLD,MAAOC,EAAMD,MACbK,WAAYJ,EAAMI,WAAWP,SAIO,CAAE0B,aAAYM,eAAvC8C,CAAsDU,I,u3BCxDrE,IAAMQ,GAAWrF,IAAOC,IAAV,MAQRqF,GAAWtF,YAAOK,IAAPL,CAAH,MAORuF,GAAUvF,IAAOwF,GAAV,MAKPC,GAAWzF,IAAOC,IAAV,MAMRgC,GAAQjC,IAAOkC,IAAV,MAMLwD,GAAY1F,IAAOC,IAAV,MAKT0F,G,kLAEF7C,KAAKT,MAAMuD,kB,8BAGLC,GACN,IAAIC,EAAc,IAAIC,KAAY,IAAPF,GAC3B,MAAM,IAAN,OAAWC,EAAYE,UAAvB,YACEF,EAAYG,WAAa,EAD3B,YAEIH,EAAYI,iB,uCAGA,IAAD,OACf,OAAOpD,KAAKT,MAAM8D,SAASxE,KAAI,SAACyE,EAAMhD,GACpC,OACE,kBAACkC,GAAD,CACEjC,IAAKD,EACLsB,OAAO,SACPnE,GAAI6F,EAAKC,IACTC,QAAS,SAACC,GACRA,EAAMC,iBACNC,OAAOC,KAAKN,EAAKC,OAGnB,kBAACZ,GAAD,KACE,kBAAC,GAAD,CAAOlC,IAAK6C,EAAKO,SAAUlD,IAAK2C,EAAKQ,OACrC,kBAAClB,GAAD,KAAYU,EAAKS,QAEnB,uBACEnG,MAAO,CACLoG,UAAW,QACXC,YAAa,SAGf,2BAAI,EAAKf,QAAQI,EAAKY,sB,+BAQ9B,OACE,6BACE,kBAACzB,GAAD,oBACA,kBAACF,GAAD,KAAWvC,KAAKmE,uB,GA7CLhD,IAAMC,WAsDVC,gBAJS,SAAC3E,GACvB,MAAO,CAAE2G,SAAU3G,EAAMO,YAGa,CAAE6F,cJ7Eb,yDAAM,WAAO5E,GAAP,eAAAC,EAAA,sEACVL,EAAMM,IAAN,SADU,OAC3BC,EAD2B,OAEjCH,EAAS,CAAEtB,KAAM,kBAAmBC,QAASwB,EAASC,OAFrB,2CAAN,wDI6Ed+C,CAA4CwB,I,wCC1F3DuB,KAAWC,MCNF,CACLC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,MAAO,CACLC,gBAAiB,UACjB5G,MAAO,CACL6G,WAAY,2BAEdC,gBAAiB,WAEnBX,MAAO,CACLnG,MAAO,CACLuE,MAAO,UACPwC,cAAe,YACfC,SAAU,SAGdC,SAAU,CACRjH,MAAO,CACLuE,MAAO,UACPwC,cAAe,cAGnBG,MAAO,CACLC,cAAe,UACfC,OAAQ,CACNpH,MAAO,CACLuE,MAAO,YAGX8C,UAAW,UACXC,mBAAoB,UACpBC,UAAW,UACXpB,MAAO,CACLnG,MAAO,CACLuE,MAAO,aAIbiD,MAAO,CACLL,cAAe,UACfC,OAAQ,CACNpH,MAAO,CACLuE,MAAO,YAGX8C,UAAW,UACXC,mBAAoB,UACpBC,UAAW,UACXE,UAAW,EACXtB,MAAO,CACLnG,MAAO,CACLuE,MAAO,aAIbmD,QAAS,CACPd,gBAAiB,sBACjB5G,MAAO,CACLuE,MAAO,YAGXoD,YAAa,CACXC,OAAQ,CACNC,WAAY,CACVtD,MAAO,UACPvE,MAAO,CACLgH,SAAU,SAGdc,OAAQ,CACNT,UAAW,SAGfU,QAAS,CACPC,UAAW,WAEbC,YAAa,CACXZ,UAAW,SAEba,SAAU,CACR3D,MAAO,UAGX4D,OAAQ,CACNvB,gBAAiB,UACjBwB,UAAW,CACT7D,MAAO,WAET8D,eAAgB,CACd9D,MAAO,QAET+D,gBAAiB,CACf/D,MAAO,WAET4B,MAAO,CACLnG,MAAO,CACLuE,MAAO,aAIbgE,QAAS,CACPvI,MAAO,CACLuE,MAAO,SAGX6C,OAAQ,CACNpH,MAAO,CACLuE,MAAO,YAGXiE,UAAW,CACTC,qBAAsB,CACpBlE,MAAO,WAETmE,qBAAsB,CACpBnE,MAAO,YAGXoE,WAAY,CACVC,cAAe,CACbC,aAAc,UACdpC,MAAO,CACLqC,KAAM,aAKZC,cAAe,CACbC,YAAa,CACXF,KAAM,UACNG,OAAQ,UACRjJ,MAAO,CACLuE,MAAO,QAET2E,OAAQ,CACNC,MAAO,CACLL,KAAM,UACNG,OAAQ,UACRjJ,MAAO,CACLuE,MAAO,UAGX6E,OAAQ,CACNN,KAAM,UACNG,OAAQ,UACRjJ,MAAO,CACLuE,MAAO,YAKf8E,oBAAqB,UACrBC,WAAY,CACV1C,gBAAiB,OACjBrC,MAAO,UAETgF,WAAY,CACVhF,MAAO,WAGXiF,UAAW,CACTC,QAAS,CACP7C,gBAAiB,OACjB8C,YAAa,QAEfC,aAAc,OACdC,SAAU,wBACVhC,OAAQ,CACNrD,MAAO,UACP8C,UAAW,WAEbH,MAAO,CACLC,cAAe,YAGnB0C,UAAW,CACTC,mBAAoB,UACpBC,eAAgB,UAChBC,iBAAkB,OAClBC,sBAAuB,UACvBC,kBAAmB,UACnBC,WAAY,OACZC,qBAAsB,UACtBC,iBAAkB,YD5LxB7D,KAAW8D,WAAW9D,KAAWC,O,IAE3B8D,G,wKAEF,OAAKnI,KAAKT,MAAM6I,WAGT,GAFEpI,KAAKT,MAAM6I,WAAWxJ,KAAKC,KAAI,kBAAqB,CAArB,EAAGC,KAAH,EAASC,Y,+BAMjD,IAAIsJ,EAAU,CACZtE,MAAO,CACLuE,KAAK,GAAD,OAAKtI,KAAKT,MAAMb,KAAKwB,SAASC,SAA9B,WAENqF,OAAQ,CACN,CACE9H,KAAMsC,KAAKT,MAAMb,KAAKwB,SAASM,KAC/BlC,KAAM0B,KAAKT,MAAM6I,cAKvB,OAAKC,EAAQ7C,OAAO,GAAGlH,KAIrB,kBAAC,KAAD,CACEiK,WAAYnE,KACZoE,gBAAiB,aACjBH,QAASA,IANJ,S,GAtBOlH,IAAMC,WAoCXC,gBAHS,SAAC3E,GACvB,MAAO,CAAE0L,WAAY1L,EAAMM,kBAEdqE,CAAyB8G,I,ywBExCxC,IAAMM,GAAYvL,IAAOC,IAAV,MASTuL,GAAWxL,IAAOC,IAAV,MASRgC,GAAQjC,IAAOkC,IAAV,MAMLC,GAAQnC,IAAOyL,GAAV,MAGA,SAACpJ,GAAD,OAAYA,EAAMC,MAAQ,EAAI,UAAY,aAE/CC,GAAQvC,IAAOyL,GAAV,MAKLC,G,8KACYrM,GACd,IAAIqD,EAAMrD,EAAMsD,QAAQ,IAAK,IAAIC,OACjC,OAAOC,OAAOH,K,uCAEE,IAAD,OACf,OAAOI,KAAKT,MAAM9C,MAAMoM,MACtB,SAACnK,GAAD,OAAUA,EAAKwB,SAASM,OAAS,EAAKjB,MAAMxC,iB,+BAI9C,OACE,kBAAC0L,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,KAAQ1I,KAAK8I,iBAAiB5I,SAASM,MACvC,kBAAC,GAAD,CACEC,IAAG,uCACDT,KAAK8I,iBAAiB5I,SAASQ,UAEjCC,IAAKX,KAAKT,MAAMxC,cAElB,kBAAC,GAAD,CACEyC,MAAOQ,KAAKgB,gBACVhB,KAAK8I,iBAAiBlI,QAAQC,IAAII,eAGnCjB,KAAK8I,iBAAiBlI,QAAQC,IAAIE,QAIvC,kBAAC,GAAD,CAAOrC,KAAMsB,KAAK8I,wB,GA9BA3H,IAAMC,WAwCjBC,gBAJS,SAAC3E,GACvB,MAAO,CAAED,MAAOC,EAAMD,MAAOM,YAAaL,EAAMK,YAAYR,SAGtB,CACtC0B,aACAQ,uBAFa4C,CAGZuH,I,qcC9EH,IAAMG,GAAe7L,IAAOC,IAAV,MAOZ+B,GAAOhC,IAAOC,IAAV,MASJkC,GAAQnC,IAAO8L,GAAV,MACA,SAACzJ,GAAD,OAAYA,EAAMC,MAAQ,EAAI,UAAY,aAG/CyJ,G,8KACY1M,GACd,IAAIqD,EAAMrD,EAAMsD,QAAQ,IAAK,IAAIC,OACjC,OAAOC,OAAOH,K,uCAEE,IAAD,OACf,OAAOI,KAAKT,MAAM2J,SACfjJ,QAAO,SAACvB,GACP,OAAOA,EAAKwB,SAASM,OAAS,EAAKjB,MAAMxC,eAE1C8B,KAAI,SAACH,EAAM4B,GACV,OACE,kBAAC,GAAD,CACEC,IAAKD,EACLkD,QAAS,kBAAM,EAAKjE,MAAMP,eAAeN,EAAKwB,SAASM,QAEvD,4BAAK9B,EAAKwB,SAASM,MACnB,kBAAC,GAAD,CAAOhB,MAAO,EAAKwB,gBAAgBtC,EAAKkC,QAAQC,IAAII,eACjD,IACAvC,EAAKkC,QAAQC,IAAIE,a,+BAO5B,OAAO,kBAACgI,GAAD,KAAe/I,KAAKmJ,sB,GA1BRhI,IAAMC,WAqCdC,gBAPS,SAAC3E,GACvB,MAAO,CACLwM,SAAUxM,EAAMD,MAAM2M,MAAM,EAAG,GAC/BrM,YAAaL,EAAMK,YAAYR,SAIK,CACtCyC,kBADaqC,CAEZ4H,IC1DGI,G,kDACJ,WAAY9J,GAAQ,IAAD,8BACjB,cAAMA,IACDA,MAAMP,eAAe,EAAKO,MAAM+J,MAAMC,OAAO7L,MAFjC,E,qDAKjB,OACE,6BACE,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GATqByD,IAAMC,WAepBC,eAAQ,KAAM,CAAErC,kBAAhBqC,CAAkCgI,I,SCnBlCG,kBCsBAC,GAfH,WACV,OACE,kBAAC,IAAD,CAAQC,QAASA,IACf,kBAACC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/H,KACjC,kBAAC,IAAD,CAAO6H,KAAK,QAAQC,OAAK,EAACC,UAAWjH,KACrC,kBAAC,IAAD,CAAO+G,KAAK,oBAAoBC,OAAK,EAACC,UAAWT,SCRrDU,GAAmBpG,OAAOqG,sCAAwCC,IAElEC,GAAQC,YACZC,EACAL,GAAiBM,YAAgBC,OAEnCC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.a2de6402.chunk.js","sourcesContent":["const INITIAL_STATE = { value: \"\" };\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"SEARCH_COINS\": {\n      const value = action.payload;\n      return { ...state, value };\n    }\n\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = { value: \"\" };\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"SET_COIN\": {\n      const value = action.payload;\n      return { ...state, value };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport coinsReducer from \"./coinsReducer\";\nimport searchReducer from \"./searchReducer\";\nimport historicalReducer from \"./historicalReducer\";\nimport coinNews from \"./coinNewsReducer\";\nimport currentCoinReducer from \"./currentCoinReducer\";\n\nexport default combineReducers({\n  coins: coinsReducer,\n  searchTerm: searchReducer,\n  currentCoin: currentCoinReducer,\n  historicalData: historicalReducer,\n  coinNews: coinNews,\n});\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_COINS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_HISTORICAL\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_COIN_NEWS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  font-family: \"Roboto Mono\", monospace;\n  padding: 0 40px;\n  background: #121212;\n  color: #fff;\n  min-height: 100vh;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Logo = styled.div`\n  font-size: 1.5rem;\n  color: #41b883;\n  font-weight: bold;\n`;\nconst Bar = styled.div`\n  display: grid;\n  grid-template-columns: 180px auto 100px 100px;\n  padding: 0 16px;\n  background: #1f1b24;\n  color: #41b883;\n  line-height: 72px;\n`;\n\nconst ControlLink = styled(Link)`\n  cursor: pointer;\n  color: #41b883;\n  text-decoration: none;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nconst ControlButton = ({ to, name }) => {\n  return <ControlLink to={to}>{name}</ControlLink>;\n};\n\nconst NavBar = () => {\n  return (\n    <Bar>\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n        <Logo>Cryptoviz</Logo>\n      </Link>\n\n      <div></div>\n\n      <ControlButton to=\"/news\" name=\"News\" />\n      <ControlButton to=\"/\" name=\"Settings\" />\n    </Bar>\n  );\n};\n\nexport default NavBar;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:4000\",\n});\n","import axios from \"../api/crypto\";\n\nexport const fetchCoins = () => async (dispatch) => {\n  const response = await axios.get(\"/coins\");\n  dispatch({ type: \"FETCH_COINS\", payload: response.data });\n};\n\nexport const searchCoins = (term) => (dispatch) => {\n  dispatch({ type: \"SEARCH_COINS\", payload: term });\n};\n\nexport const fetchHistoricalData = (coin) => async (dispatch) => {\n  const response = await axios.get(`/historical/${coin}`);\n  const arr = response.data.Data.Data.map(({ time, close }) => [\n    time * 1000,\n    close,\n  ]);\n  dispatch({ type: \"FETCH_HISTORICAL\", payload: arr });\n};\n\nexport const fetchCoinNews = () => async (dispatch) => {\n  const response = await axios.get(`/news`);\n  dispatch({ type: \"FETCH_COIN_NEWS\", payload: response.data });\n};\n\nexport const setCurrentCoin = (coin) => async (dispatch) => {\n  dispatch({ type: \"SET_COIN\", payload: coin });\n  dispatch(fetchHistoricalData(coin));\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 15px;\n  color: #efbb35;\n  margin-top: 20px;\n  & :hover {\n    cursor: pointer;\n    box-shadow: 0 0 3px 3px #41b883;\n  }\n`;\n\nconst Tile = styled(Link)`\n  text-align: center;\n  background: #1f1b24;\n  color: #efbb35;\n  padding: 15px;\n  text-decoration: none;\n  & :hover {\n    box-shadow: none;\n  }\n`;\n\nconst Image = styled.img`\n  height: 70px;\n  width: 70px;\n`;\n\nconst Price = styled.strong`\n  color: ${(props) => (props.price < 0 ? \"#ff2d15\" : \"#2f9821\")};\n`;\n\nconst Title = styled.p`\n  font-size: 1.2rem;\n  color: #41b883;\n  font-weight: bold;\n`;\n\nclass CoinGrid extends React.Component {\n  convertToNumber(value) {\n    let str = value.replace(\"$\", \"\").trim();\n    return Number(str);\n  }\n\n  renderCoinsList() {\n    return this.props.coins\n      .filter((coin) => {\n        return coin.CoinInfo.FullName.toLowerCase().includes(\n          this.props.searchTerm.value\n        );\n      })\n      .map((coin, index) => {\n        return (\n          <Tile key={index} to={`/coindetail/${coin.CoinInfo.Name}`}>\n            <Image\n              src={`https://www.cryptocompare.com${coin.CoinInfo.ImageUrl}`}\n              alt={coin.CoinInfo.Name}\n            />\n            <Title>{coin.CoinInfo.FullName}</Title>\n            <p>Market Cap : {coin.DISPLAY.USD.MKTCAP}</p>\n            <p>Price : {coin.DISPLAY.USD.PRICE}</p>\n            <p>\n              Change (24h):{\" \"}\n              <Price\n                price={this.convertToNumber(coin.DISPLAY.USD.CHANGE24HOUR)}\n              >\n                {coin.DISPLAY.USD.CHANGE24HOUR}\n              </Price>\n            </p>\n          </Tile>\n        );\n      });\n  }\n  render() {\n    return <Grid>{this.renderCoinsList()}</Grid>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { coins: state.coins, searchTerm: state.searchTerm };\n};\n\nexport default connect(mapStateToProps, null)(CoinGrid);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { searchCoins } from \"../actions\";\n\nconst Input = styled.input`\n  padding: 1rem;\n  background: #1f1b24;\n  color: #f9ffee;\n  font-size: 1.2rem;\n  margin: 20px 0;\n  border-radius: 10px;\n  border: none;\n`;\n\nconst SearchBar = (props) => {\n  return (\n    <Input\n      type=\"text\"\n      placeholder=\"Search Coins\"\n      value={props.searchValue}\n      onChange={(e) => props.searchCoins(e.target.value)}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { searchValue: state.searchTerm.value };\n};\n\nexport default connect(mapStateToProps, { searchCoins })(SearchBar);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { connect } from \"react-redux\";\nimport { fetchCoins, searchCoins } from \"../actions\";\nimport CoinGrid from \"./CoinGrid\";\nimport SearchBar from \"./SearchBar\";\n\nconst Board = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 80vh;\n`;\n\nconst SearchFlex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nclass DashBoard extends React.Component {\n  componentDidMount() {\n    this.props.fetchCoins();\n  }\n\n  render() {\n    if (!this.props.coins.length) {\n      return (\n        <Board>\n          <Loader\n            type=\"Grid\"\n            color=\"#41b883\"\n            height={300}\n            width={300}\n            timeout={30000} // 30sec\n          />\n        </Board>\n      );\n    }\n    return (\n      <div>\n        <SearchFlex>\n          <SearchBar\n            value={this.props.searchTerm}\n            onSearch={this.onSeachChange}\n          />\n        </SearchFlex>\n\n        <CoinGrid />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    coins: state.coins,\n    searchTerm: state.searchTerm.value,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchCoins, searchCoins })(DashBoard);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { fetchCoinNews } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst NewsGrid = styled.div`\n  display grid;\n  grid-template-columns: repeat(3, 1fr);\n  justify-content: center;\n  grid-gap:15px;\n  margin-top:15px;\n`;\n\nconst NewsTile = styled(Link)`\n  text-align: center;\n  text-decoration: none;\n  color: #efbb35;\n  background: #1f1b24;\n`;\n\nconst Heading = styled.h2`\n  text-align: center;\n  color: #41b883;\n  margin: 15px 0;\n`;\nconst NewsFlex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: auto;\n`;\nconst Image = styled.img`\n  flex: 1;\n  height: 100px;\n  width: 100px;\n`;\n\nconst Newstitle = styled.div`\n  flex: 2;\n  padding: 15px;\n`;\n\nclass News extends React.Component {\n  componentDidMount() {\n    this.props.fetchCoinNews();\n  }\n\n  getDate(date) {\n    let currentDate = new Date(date * 1000);\n    return ` ${currentDate.getDate()}/${\n      currentDate.getMonth() + 1\n    }/${currentDate.getFullYear()}`;\n  }\n\n  renderNewsList() {\n    return this.props.newsList.map((news, index) => {\n      return (\n        <NewsTile\n          key={index}\n          target=\"_blank\"\n          to={news.url}\n          onClick={(event) => {\n            event.preventDefault();\n            window.open(news.url);\n          }}\n        >\n          <NewsFlex>\n            <Image src={news.imageurl} alt={news.tags} />\n            <Newstitle>{news.title}</Newstitle>\n          </NewsFlex>\n          <p\n            style={{\n              textAlign: \"right\",\n              marginRight: \"30px\",\n            }}\n          >\n            <b>{this.getDate(news.published_on)}</b>\n          </p>\n        </NewsTile>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Heading>Crypto News</Heading>\n        <NewsGrid>{this.renderNewsList()}</NewsGrid>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return { newsList: state.coinNews };\n};\n\nexport default connect(mapStateToProps, { fetchCoinNews })(News);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport chartTheme from \"./chartTheme\";\n\n// Apply the theme\nHighcharts.theme = chartTheme();\nHighcharts.setOptions(Highcharts.theme);\n\nclass Chart extends React.Component {\n  getData() {\n    if (!this.props.historical) {\n      return this.props.historical.Data.map(({ time, close }) => [time, close]);\n    }\n    return [];\n  }\n\n  render() {\n    let options = {\n      title: {\n        text: `${this.props.coin.CoinInfo.FullName} Price`,\n      },\n      series: [\n        {\n          name: this.props.coin.CoinInfo.Name,\n          data: this.props.historical,\n        },\n      ],\n    };\n\n    if (!options.series[0].data) {\n      return null;\n    }\n    return (\n      <HighchartsReact\n        highcharts={Highcharts}\n        constructorType={\"stockChart\"}\n        options={options}\n      />\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return { historical: state.historicalData };\n};\nexport default connect(mapStateToProps)(Chart);\n","export default () => {\n  return {\n    colors: [\n      \"#2b908f\",\n      \"#90ee7e\",\n      \"#f45b5b\",\n      \"#7798BF\",\n      \"#aaeeee\",\n      \"#ff0066\",\n      \"#eeaaee\",\n      \"#55BF3B\",\n      \"#DF5353\",\n      \"#7798BF\",\n      \"#aaeeee\",\n    ],\n    chart: {\n      backgroundColor: \"#1F1B24\",\n      style: {\n        fontFamily: \"'Unica One', sans-serif\",\n      },\n      plotBorderColor: \"#606063\",\n    },\n    title: {\n      style: {\n        color: \"#EFBB35\",\n        textTransform: \"uppercase\",\n        fontSize: \"20px\",\n      },\n    },\n    subtitle: {\n      style: {\n        color: \"#E0E0E3\",\n        textTransform: \"uppercase\",\n      },\n    },\n    xAxis: {\n      gridLineColor: \"#707073\",\n      labels: {\n        style: {\n          color: \"#E0E0E3\",\n        },\n      },\n      lineColor: \"#707073\",\n      minorGridLineColor: \"#505053\",\n      tickColor: \"#707073\",\n      title: {\n        style: {\n          color: \"#A0A0A3\",\n        },\n      },\n    },\n    yAxis: {\n      gridLineColor: \"#707073\",\n      labels: {\n        style: {\n          color: \"#E0E0E3\",\n        },\n      },\n      lineColor: \"#707073\",\n      minorGridLineColor: \"#505053\",\n      tickColor: \"#707073\",\n      tickWidth: 1,\n      title: {\n        style: {\n          color: \"#A0A0A3\",\n        },\n      },\n    },\n    tooltip: {\n      backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n      style: {\n        color: \"#F0F0F0\",\n      },\n    },\n    plotOptions: {\n      series: {\n        dataLabels: {\n          color: \"#F0F0F3\",\n          style: {\n            fontSize: \"13px\",\n          },\n        },\n        marker: {\n          lineColor: \"#333\",\n        },\n      },\n      boxplot: {\n        fillColor: \"#505053\",\n      },\n      candlestick: {\n        lineColor: \"white\",\n      },\n      errorbar: {\n        color: \"white\",\n      },\n    },\n    legend: {\n      backgroundColor: \"#1f1b24\",\n      itemStyle: {\n        color: \"#E0E0E3\",\n      },\n      itemHoverStyle: {\n        color: \"#FFF\",\n      },\n      itemHiddenStyle: {\n        color: \"#606063\",\n      },\n      title: {\n        style: {\n          color: \"#C0C0C0\",\n        },\n      },\n    },\n    credits: {\n      style: {\n        color: \"#666\",\n      },\n    },\n    labels: {\n      style: {\n        color: \"#707073\",\n      },\n    },\n    drilldown: {\n      activeAxisLabelStyle: {\n        color: \"#F0F0F3\",\n      },\n      activeDataLabelStyle: {\n        color: \"#F0F0F3\",\n      },\n    },\n    navigation: {\n      buttonOptions: {\n        symbolStroke: \"#DDDDDD\",\n        theme: {\n          fill: \"#505053\",\n        },\n      },\n    },\n    // scroll charts\n    rangeSelector: {\n      buttonTheme: {\n        fill: \"#505053\",\n        stroke: \"#000000\",\n        style: {\n          color: \"#CCC\",\n        },\n        states: {\n          hover: {\n            fill: \"#707073\",\n            stroke: \"#000000\",\n            style: {\n              color: \"white\",\n            },\n          },\n          select: {\n            fill: \"#000003\",\n            stroke: \"#000000\",\n            style: {\n              color: \"white\",\n            },\n          },\n        },\n      },\n      inputBoxBorderColor: \"#505053\",\n      inputStyle: {\n        backgroundColor: \"#333\",\n        color: \"silver\",\n      },\n      labelStyle: {\n        color: \"silver\",\n      },\n    },\n    navigator: {\n      handles: {\n        backgroundColor: \"#666\",\n        borderColor: \"#AAA\",\n      },\n      outlineColor: \"#CCC\",\n      maskFill: \"rgba(255,255,255,0.1)\",\n      series: {\n        color: \"#7798BF\",\n        lineColor: \"#A6C7ED\",\n      },\n      xAxis: {\n        gridLineColor: \"#505053\",\n      },\n    },\n    scrollbar: {\n      barBackgroundColor: \"#808083\",\n      barBorderColor: \"#808083\",\n      buttonArrowColor: \"#CCC\",\n      buttonBackgroundColor: \"#606063\",\n      buttonBorderColor: \"#606063\",\n      rifleColor: \"#FFF\",\n      trackBackgroundColor: \"#404043\",\n      trackBorderColor: \"#404043\",\n    },\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { fetchCoins, fetchHistoricalData } from \"../actions\";\nimport Chart from \"./chart/Chart\";\n\nconst ChartGrid = styled.div`\n  display: grid;\n  margin-top: 20px;\n  grid-template-columns: 1fr 3fr;\n  grid-gap: 15px;\n  background: #1f1b24;\n  align-items: center;\n`;\n\nconst SideGrid = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 2fr 1fr;\n  grid-gap: 15px;\n  background: #1f1b24;\n  color: #efbb35;\n  margin: 0;\n`;\n\nconst Image = styled.img`\n  height: 150px;\n  width: 150px;\n  margin: auto;\n`;\n\nconst Price = styled.h1`\n  margin: auto;\n  font-size: 2rem;\n  color: ${(props) => (props.price < 0 ? \"#ff2d15\" : \"#2f9821\")};\n`;\nconst Title = styled.h1`\n  margin: auto;\n  font-size: 2rem;\n`;\n\nclass CoinDetails extends React.Component {\n  convertToNumber(value) {\n    let str = value.replace(\"$\", \"\").trim();\n    return Number(str);\n  }\n  getCurrentCoin() {\n    return this.props.coins.find(\n      (coin) => coin.CoinInfo.Name === this.props.currentCoin\n    );\n  }\n  render() {\n    return (\n      <ChartGrid>\n        <SideGrid>\n          <Title>{this.getCurrentCoin().CoinInfo.Name}</Title>\n          <Image\n            src={`https://www.cryptocompare.com${\n              this.getCurrentCoin().CoinInfo.ImageUrl\n            }`}\n            alt={this.props.currentCoin}\n          />\n          <Price\n            price={this.convertToNumber(\n              this.getCurrentCoin().DISPLAY.USD.CHANGE24HOUR\n            )}\n          >\n            {this.getCurrentCoin().DISPLAY.USD.PRICE}\n          </Price>\n        </SideGrid>\n\n        <Chart coin={this.getCurrentCoin()} />\n      </ChartGrid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { coins: state.coins, currentCoin: state.currentCoin.value };\n};\n\nexport default connect(mapStateToProps, {\n  fetchCoins,\n  fetchHistoricalData,\n})(CoinDetails);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { setCurrentCoin } from \"../actions\";\n\nconst TopCoinsFlex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n`;\n\nconst Tile = styled.div`\n  background: #1f1b24;\n  color: #efbb35;\n  text-align: center;\n  padding: 15px;\n  cursor: pointer;\n  width: 120px;\n`;\n\nconst Price = styled.h3`\n  color: ${(props) => (props.price < 0 ? \"#ff2d15\" : \"#2f9821\")};\n`;\n\nclass TopCoins extends React.Component {\n  convertToNumber(value) {\n    let str = value.replace(\"$\", \"\").trim();\n    return Number(str);\n  }\n  renderTopCoins() {\n    return this.props.topCoins\n      .filter((coin) => {\n        return coin.CoinInfo.Name !== this.props.currentCoin;\n      })\n      .map((coin, index) => {\n        return (\n          <Tile\n            key={index}\n            onClick={() => this.props.setCurrentCoin(coin.CoinInfo.Name)}\n          >\n            <h2>{coin.CoinInfo.Name}</h2>\n            <Price price={this.convertToNumber(coin.DISPLAY.USD.CHANGE24HOUR)}>\n              {\" \"}\n              {coin.DISPLAY.USD.PRICE}\n            </Price>\n          </Tile>\n        );\n      });\n  }\n  render() {\n    return <TopCoinsFlex>{this.renderTopCoins()}</TopCoinsFlex>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    topCoins: state.coins.slice(0, 8),\n    currentCoin: state.currentCoin.value,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCurrentCoin,\n})(TopCoins);\n","import React from \"react\";\nimport CoinDetails from \"./CoinDetails\";\nimport TopCoins from \"./TopCoins\";\nimport { setCurrentCoin } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nclass ChartDashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.setCurrentCoin(this.props.match.params.name);\n  }\n  render() {\n    return (\n      <div>\n        <TopCoins />\n        <CoinDetails />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { setCurrentCoin })(ChartDashBoard);\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport AppLayout from \"./AppLayout\";\nimport NavBar from \"./NavBar\";\nimport DashBoard from \"./Dashboard\";\nimport News from \"./News\";\nimport ChartDashBoard from \"./ChartDashBoard\";\nimport history from \"../history\";\n\nconst App = () => {\n  return (\n    <Router history={history}>\n      <AppLayout>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" exact component={DashBoard} />\n          <Route path=\"/news\" exact component={News} />\n          <Route path=\"/coindetail/:name\" exact component={ChartDashBoard} />\n        </Switch>\n      </AppLayout>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}