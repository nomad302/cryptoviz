{"ast":null,"code":"var _jsxFileName = \"/home/shaggy/workspace/cryptoviz/client/src/components/CoinGrid.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 15px;\n  color: #efbb35;\n  margin-top: 20px;\n  & :hover {\n    cursor: pointer;\n    box-shadow: 0 0 3px 3px #41b883;\n  }\n`;\nconst Tile = styled(Link)`\n  text-align: center;\n  background: #1f1b24;\n  color: #efbb35;\n  padding: 15px;\n  text-decoration: none;\n  & :hover {\n    box-shadow: none;\n  }\n`;\nconst Image = styled.img`\n  height: 70px;\n  width: 70px;\n`;\nconst Price = styled.strong`\n  color: ${props => props.price < 0 ? \"red\" : \"green\"};\n`;\nconst Title = styled.p`\n  font-size: 1.2rem;\n  color: #41b883;\n`;\n\nclass CoinGrid extends React.Component {\n  convertToNumber(value) {\n    let str = value.replace(\"$\", \"\").trim();\n    return Number(str);\n  }\n\n  renderCoinsList() {\n    return this.props.coins.filter(coin => {\n      return coin.CoinInfo.FullName.toLowerCase().includes(this.props.searchTerm.value);\n    }).map((coin, index) => {\n      return /*#__PURE__*/React.createElement(Tile, {\n        key: index,\n        to: `/coindetail/${coin.CoinInfo.Name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: `https://www.cryptocompare.com${coin.CoinInfo.ImageUrl}`,\n        alt: coin.CoinInfo.Name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, coin.CoinInfo.FullName), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, \"Market Cap : \", coin.DISPLAY.USD.MKTCAP), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, \"Price : \", coin.DISPLAY.USD.PRICE), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"Change (24h):\", \" \", /*#__PURE__*/React.createElement(Price, {\n        price: this.convertToNumber(coin.DISPLAY.USD.CHANGE24HOUR),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, coin.DISPLAY.USD.CHANGE24HOUR)));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }, this.renderCoinsList());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    coins: state.coins,\n    searchTerm: state.searchTerm\n  };\n};\n\nexport default connect(mapStateToProps, null)(CoinGrid);","map":{"version":3,"sources":["/home/shaggy/workspace/cryptoviz/client/src/components/CoinGrid.js"],"names":["React","connect","styled","Link","Grid","div","Tile","Image","img","Price","strong","props","price","Title","p","CoinGrid","Component","convertToNumber","value","str","replace","trim","Number","renderCoinsList","coins","filter","coin","CoinInfo","FullName","toLowerCase","includes","searchTerm","map","index","Name","ImageUrl","DISPLAY","USD","MKTCAP","PRICE","CHANGE24HOUR","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;CAAxB;AAYA,MAAMC,IAAI,GAAGJ,MAAM,CAACC,IAAD,CAAO;;;;;;;;;CAA1B;AAWA,MAAMI,KAAK,GAAGL,MAAM,CAACM,GAAI;;;CAAzB;AAKA,MAAMC,KAAK,GAAGP,MAAM,CAACQ,MAAO;WAChBC,KAAD,IAAYA,KAAK,CAACC,KAAN,GAAc,CAAd,GAAkB,KAAlB,GAA0B,OAAS;CAD1D;AAIA,MAAMC,KAAK,GAAGX,MAAM,CAACY,CAAE;;;CAAvB;;AAKA,MAAMC,QAAN,SAAuBf,KAAK,CAACgB,SAA7B,CAAuC;AACrCC,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACrB,QAAIC,GAAG,GAAGD,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,EAAnB,EAAuBC,IAAvB,EAAV;AACA,WAAOC,MAAM,CAACH,GAAD,CAAb;AACD;;AAEDI,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKZ,KAAL,CAAWa,KAAX,CACJC,MADI,CACIC,IAAD,IAAU;AAChB,aAAOA,IAAI,CAACC,QAAL,CAAcC,QAAd,CAAuBC,WAAvB,GAAqCC,QAArC,CACL,KAAKnB,KAAL,CAAWoB,UAAX,CAAsBb,KADjB,CAAP;AAGD,KALI,EAMJc,GANI,CAMA,CAACN,IAAD,EAAOO,KAAP,KAAiB;AACpB,0BACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,EAAE,EAAG,eAAcP,IAAI,CAACC,QAAL,CAAcO,IAAK,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,GAAG,EAAG,gCAA+BR,IAAI,CAACC,QAAL,CAAcQ,QAAS,EAD9D;AAEE,QAAA,GAAG,EAAET,IAAI,CAACC,QAAL,CAAcO,IAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQR,IAAI,CAACC,QAAL,CAAcC,QAAtB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiBF,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBC,MAAlC,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYZ,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBE,KAA7B,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgB,GADhB,eAEE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKtB,eAAL,CAAqBS,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBG,YAAtC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGd,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBG,YAHpB,CAFF,CARF,CADF;AAmBD,KA1BI,CAAP;AA2BD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKlB,eAAL,EAAP,CAAP;AACD;;AArCoC;;AAwCvC,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEnB,IAAAA,KAAK,EAAEmB,KAAK,CAACnB,KAAf;AAAsBO,IAAAA,UAAU,EAAEY,KAAK,CAACZ;AAAxC,GAAP;AACD,CAFD;;AAIA,eAAe9B,OAAO,CAACyC,eAAD,EAAkB,IAAlB,CAAP,CAA+B3B,QAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 15px;\n  color: #efbb35;\n  margin-top: 20px;\n  & :hover {\n    cursor: pointer;\n    box-shadow: 0 0 3px 3px #41b883;\n  }\n`;\n\nconst Tile = styled(Link)`\n  text-align: center;\n  background: #1f1b24;\n  color: #efbb35;\n  padding: 15px;\n  text-decoration: none;\n  & :hover {\n    box-shadow: none;\n  }\n`;\n\nconst Image = styled.img`\n  height: 70px;\n  width: 70px;\n`;\n\nconst Price = styled.strong`\n  color: ${(props) => (props.price < 0 ? \"red\" : \"green\")};\n`;\n\nconst Title = styled.p`\n  font-size: 1.2rem;\n  color: #41b883;\n`;\n\nclass CoinGrid extends React.Component {\n  convertToNumber(value) {\n    let str = value.replace(\"$\", \"\").trim();\n    return Number(str);\n  }\n\n  renderCoinsList() {\n    return this.props.coins\n      .filter((coin) => {\n        return coin.CoinInfo.FullName.toLowerCase().includes(\n          this.props.searchTerm.value\n        );\n      })\n      .map((coin, index) => {\n        return (\n          <Tile key={index} to={`/coindetail/${coin.CoinInfo.Name}`}>\n            <Image\n              src={`https://www.cryptocompare.com${coin.CoinInfo.ImageUrl}`}\n              alt={coin.CoinInfo.Name}\n            />\n            <Title>{coin.CoinInfo.FullName}</Title>\n            <p>Market Cap : {coin.DISPLAY.USD.MKTCAP}</p>\n            <p>Price : {coin.DISPLAY.USD.PRICE}</p>\n            <p>\n              Change (24h):{\" \"}\n              <Price\n                price={this.convertToNumber(coin.DISPLAY.USD.CHANGE24HOUR)}\n              >\n                {coin.DISPLAY.USD.CHANGE24HOUR}\n              </Price>\n            </p>\n          </Tile>\n        );\n      });\n  }\n  render() {\n    return <Grid>{this.renderCoinsList()}</Grid>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { coins: state.coins, searchTerm: state.searchTerm };\n};\n\nexport default connect(mapStateToProps, null)(CoinGrid);\n"]},"metadata":{},"sourceType":"module"}