{"ast":null,"code":"var _jsxFileName = \"/home/shaggy/workspace/cryptoviz/src/components/CoinGrid.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 15px;\n  color: #fff;\n  margin-top: 20px;\n`;\nconst Tile = styled.div`\n  background: #1f1b24;\n  color: #fff;\n  padding: 15px;\n`;\nconst Image = styled(img)`\n  height: 100px;\n  width: 100px;\n`;\n\nconst controlImage = (src, alt) => {\n  return /*#__PURE__*/React.createElement(Image, {\n    src: src,\n    alt: alt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  });\n};\n\nclass CoinGrid extends React.Component {\n  renderCoinsList() {\n    const BASE_URL = \"https://www.cryptocompare.com\";\n    return this.props.coins.map((coin, index) => {\n      if (index >= 100) return;\n      return /*#__PURE__*/React.createElement(Tile, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"controlImage\", {\n        src: BASE_URL + coin.ImageUrl,\n        alt: coin.Name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, coin.CoinName));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, this.renderCoinsList());\n  }\n\n}\n\nexport default CoinGrid;","map":{"version":3,"sources":["/home/shaggy/workspace/cryptoviz/src/components/CoinGrid.js"],"names":["React","styled","Grid","div","Tile","Image","img","controlImage","src","alt","CoinGrid","Component","renderCoinsList","BASE_URL","props","coins","map","coin","index","ImageUrl","Name","CoinName","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;;;;;;CAAxB;AAQA,MAAMC,IAAI,GAAGH,MAAM,CAACE,GAAI;;;;CAAxB;AAMA,MAAME,KAAK,GAAGJ,MAAM,CAACK,GAAD,CAAM;;;CAA1B;;AAKA,MAAMC,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,sBAAO,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAED,GAAZ;AAAiB,IAAA,GAAG,EAAEC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;AAIA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACrCC,EAAAA,eAAe,GAAG;AAChB,UAAMC,QAAQ,GAAG,+BAAjB;AACA,WAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3C,UAAIA,KAAK,IAAI,GAAb,EAAkB;AAClB,0BACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAc,QAAA,GAAG,EAAEL,QAAQ,GAAGI,IAAI,CAACE,QAAnC;AAA6C,QAAA,GAAG,EAAEF,IAAI,CAACG,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,IAAI,CAACI,QAAT,CAFF,CADF;AAMD,KARM,CAAP;AASD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKV,eAAL,EAAP,CAAP;AACD;;AAfoC;;AAkBvC,eAAeF,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 15px;\n  color: #fff;\n  margin-top: 20px;\n`;\n\nconst Tile = styled.div`\n  background: #1f1b24;\n  color: #fff;\n  padding: 15px;\n`;\n\nconst Image = styled(img)`\n  height: 100px;\n  width: 100px;\n`;\n\nconst controlImage = (src, alt) => {\n  return <Image src={src} alt={alt} />;\n};\n\nclass CoinGrid extends React.Component {\n  renderCoinsList() {\n    const BASE_URL = \"https://www.cryptocompare.com\";\n    return this.props.coins.map((coin, index) => {\n      if (index >= 100) return;\n      return (\n        <Tile key={index}>\n          <controlImage src={BASE_URL + coin.ImageUrl} alt={coin.Name} />\n          <p>{coin.CoinName}</p>\n        </Tile>\n      );\n    });\n  }\n  render() {\n    return <Grid>{this.renderCoinsList()}</Grid>;\n  }\n}\n\nexport default CoinGrid;\n"]},"metadata":{},"sourceType":"module"}