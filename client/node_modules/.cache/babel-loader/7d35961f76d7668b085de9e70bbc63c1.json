{"ast":null,"code":"var _jsxFileName = \"/home/shaggy/workspace/cryptoviz/src/components/CoinGrid.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 15px;\n  color: #efbb35;\n  margin-top: 20px;\n`;\nconst Tile = styled.div`\n  text-align: center;\n  background: #1f1b24;\n  color: #efbb35;\n  padding: 15px;\n`;\nconst Image = styled.img`\n  height: 70px;\n  width: 70px;\n`;\nconst Price = styled.p`\n  color: ${props => props.price < 0 ? \"red\" : \"green\"};\n`;\n\nclass CoinGrid extends React.Component {\n  renderCoinsList() {\n    const BASE_URL = \"https://www.cryptocompare.com\";\n    return this.props.coins.filter(coin => {\n      return coin.CoinInfo.FullName.toLowerCase().includes(this.props.term);\n    }).map((coin, index) => {\n      return /*#__PURE__*/React.createElement(Tile, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: BASE_URL + coin.CoinInfo.ImageUrl,\n        alt: coin.CoinInfo.Name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, coin.CoinInfo.FullName)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, \"Market Cap : \", coin.DISPLAY.USD.MKTCAP), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"Price : \", coin.DISPLAY.USD.PRICE), /*#__PURE__*/React.createElement(Price, {\n        price: coin.DISPLAY.USD.CHANGEDAY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \"Change : \", coin.DISPLAY.USD.CHANGEDAY));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    }, this.renderCoinsList());\n  }\n\n}\n\nexport default CoinGrid;","map":{"version":3,"sources":["/home/shaggy/workspace/cryptoviz/src/components/CoinGrid.js"],"names":["React","styled","Grid","div","Tile","Image","img","Price","p","props","price","CoinGrid","Component","renderCoinsList","BASE_URL","coins","filter","coin","CoinInfo","FullName","toLowerCase","includes","term","map","index","ImageUrl","Name","DISPLAY","USD","MKTCAP","PRICE","CHANGEDAY","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;;;;;;CAAxB;AAQA,MAAMC,IAAI,GAAGH,MAAM,CAACE,GAAI;;;;;CAAxB;AAOA,MAAME,KAAK,GAAGJ,MAAM,CAACK,GAAI;;;CAAzB;AAKA,MAAMC,KAAK,GAAGN,MAAM,CAACO,CAAE;WACXC,KAAD,IAAYA,KAAK,CAACC,KAAN,GAAc,CAAd,GAAkB,KAAlB,GAA0B,OAAS;CAD1D;;AAIA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,eAAe,GAAG;AAChB,UAAMC,QAAQ,GAAG,+BAAjB;AACA,WAAO,KAAKL,KAAL,CAAWM,KAAX,CACJC,MADI,CACIC,IAAD,IAAU;AAChB,aAAOA,IAAI,CAACC,QAAL,CAAcC,QAAd,CAAuBC,WAAvB,GAAqCC,QAArC,CAA8C,KAAKZ,KAAL,CAAWa,IAAzD,CAAP;AACD,KAHI,EAIJC,GAJI,CAIA,CAACN,IAAD,EAAOO,KAAP,KAAiB;AACpB,0BACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,GAAG,EAAEV,QAAQ,GAAGG,IAAI,CAACC,QAAL,CAAcO,QADhC;AAEE,QAAA,GAAG,EAAER,IAAI,CAACC,QAAL,CAAcQ,IAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAST,IAAI,CAACC,QAAL,CAAcC,QAAvB,CADF,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiBF,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBC,MAAlC,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYZ,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBE,KAA7B,CATF,eAUE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEb,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBG,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACYd,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBG,SAD7B,CAVF,CADF;AAgBD,KArBI,CAAP;AAsBD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKnB,eAAL,EAAP,CAAP;AACD;;AA5BoC;;AA+BvC,eAAeF,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 15px;\n  color: #efbb35;\n  margin-top: 20px;\n`;\n\nconst Tile = styled.div`\n  text-align: center;\n  background: #1f1b24;\n  color: #efbb35;\n  padding: 15px;\n`;\n\nconst Image = styled.img`\n  height: 70px;\n  width: 70px;\n`;\n\nconst Price = styled.p`\n  color: ${(props) => (props.price < 0 ? \"red\" : \"green\")};\n`;\n\nclass CoinGrid extends React.Component {\n  renderCoinsList() {\n    const BASE_URL = \"https://www.cryptocompare.com\";\n    return this.props.coins\n      .filter((coin) => {\n        return coin.CoinInfo.FullName.toLowerCase().includes(this.props.term);\n      })\n      .map((coin, index) => {\n        return (\n          <Tile key={index}>\n            <Image\n              src={BASE_URL + coin.CoinInfo.ImageUrl}\n              alt={coin.CoinInfo.Name}\n            />\n            <p>\n              <strong>{coin.CoinInfo.FullName}</strong>\n            </p>\n            <p>Market Cap : {coin.DISPLAY.USD.MKTCAP}</p>\n            <p>Price : {coin.DISPLAY.USD.PRICE}</p>\n            <Price price={coin.DISPLAY.USD.CHANGEDAY}>\n              Change : {coin.DISPLAY.USD.CHANGEDAY}\n            </Price>\n          </Tile>\n        );\n      });\n  }\n  render() {\n    return <Grid>{this.renderCoinsList()}</Grid>;\n  }\n}\n\nexport default CoinGrid;\n"]},"metadata":{},"sourceType":"module"}